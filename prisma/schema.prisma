// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id                  String                @id @default(cuid())
    name                String?
    email               String?               @unique
    emailVerified       DateTime?
    image               String?
    accounts            Account[]
    sessions            Session[]
    UserCompany         UserCompany[]
    Client              Client[]
    NordigenRequisition NordigenRequisition[]
    Product             Product[]
    Invoice             Invoice[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Company {
    id          String        @id @default(cuid())
    name        String
    logo        String?
    oib         String?
    country     String?
    city        String?
    address     String?
    zip         String?
    UserCompany UserCompany[]
    Invoice     Invoice[]
}

model UserCompany {
    id        String  @id @default(cuid())
    userId    String
    companyId String
    user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    company   Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

    @@index([userId])
    @@index([companyId])
}

model Client {
    id        String   @id @default(cuid())
    user_id   String
    name      String
    oib       String?
    email     String?
    phone     String?
    country   String
    city      String
    address   String
    zip       String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user    User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
    Invoice Invoice[]

    @@index([user_id])
}

model NordigenRequisition {
    id        String   @id
    user_id   String
    createdAt DateTime @default(now())

    user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

    @@index([user_id])
}

model Product {
    id          String   @id @default(cuid())
    userId      String
    name        String
    price       Float
    currency    String
    description String
    unit        String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model Location {
    id    String @id @default(cuid())
    name  String
    zip   String
    state String
}

model Invoice {
    id             String   @id @default(cuid())
    userId         String
    clientId       String
    companyId      String
    brojRacuna     String
    datumRacuna    DateTime @default(now())
    datumDospijeca DateTime
    datumIsporuke  DateTime

    user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    client  Client  @relation(fields: [clientId], references: [id], onDelete: Cascade)
    company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

    InvoiceItem InvoiceItem[]

    @@index([userId])
    @@index([clientId])
    @@index([companyId])
}

model InvoiceItem {
    id             String  @id @default(cuid())
    invoiceId      String
    invoice        Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
    naziv          String
    kolicina       Int
    cijena         Float
    popust         Int
    opis           String  @db.Text
    mjernaJedinica String

    @@index([invoiceId])
}
